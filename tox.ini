[testenv:bootstrap]
deps =
    jinja2
    tox
requires =
    Cython
    numpy
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *
; a generative tox configuration, see: https://tox.wiki/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    docs,
    {py38,py39,py310,py311},
    report
ignore_basepython_conflict = true
skip_missing_interpreters = true

[testenv]
basepython =
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    {bootstrap,clean,check,docs,report}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    cover: SETUPPY_EXT_COVERAGE=yes
passenv =
    *
usedevelop = false
package = editable-legacy
deps =
    pytest
    pytest-cov
    scikit-learn
    numpy
    Cython
commands =
    {posargs:pytest --cov odds_ratio_criterion --cov-append --cov-report=term-missing -vv}

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    black
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest .
    flake8
    black --verbose --check --diff .
    isort --verbose --check-only --diff --filter-files .

[testenv:cythonize]
basepython = {env:TOXPYTHON:python}
pip_pre = true
deps =
    Cython
    numpy
skip_install = true
commands =
    {posargs:python setup.py clean --all build_ext --force}

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps =
    coverage
    Cython
skip_install = true
commands =
    coverage report -i
    coverage xml -i

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage
    Cython
